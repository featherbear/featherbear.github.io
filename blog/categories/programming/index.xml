<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Programming on Andrew&#39;s Blog</title>
    <link>/categories/programming/</link>
    <description>Recent content in Programming on Andrew&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 15 Feb 2019 16:27:36 +1100</lastBuildDate>
    
	<atom:link href="/categories/programming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Balloon Shooting Challenge</title>
      <link>/post/smallbasic-balloon-shooting-game/</link>
      <pubDate>Fri, 15 Feb 2019 16:27:36 +1100</pubDate>
      
      <guid>/post/smallbasic-balloon-shooting-game/</guid>
      <description>My code can be found on GitHub: featherbear/smallbasic-balloon-shooting-game
 A while ago I applied for a position at a company which taught children how to code&amp;hellip;
Today I got an email back with a programming challenge, let&amp;rsquo;s have a crack at it!
 The Challenge (click to expand) In order to solve the challenge you will need to download and learn a new (and very simple) coding language, I hope you will enjoy the challenge.</description>
    </item>
    
    <item>
      <title>Python 3.6 F-strings</title>
      <link>/post/python36-f-string/</link>
      <pubDate>Wed, 13 Feb 2019 18:59:13 +1100</pubDate>
      
      <guid>/post/python36-f-string/</guid>
      <description>PEP 498 introduced a new string formatting mechanism called Literal String Interpolation.
We&amp;rsquo;ll call them F-strings, because of the leading f character that appears before the string literals.
The PEP really says it all but sure we&amp;rsquo;ll go through it again, why not!
Format: f &#39; &amp;lt;text&amp;gt; { &amp;lt;expression&amp;gt; &amp;lt;optional !s, !r, or !a&amp;gt; &amp;lt;optional : format specifier&amp;gt; } &amp;lt;text&amp;gt; ... &#39;
Using string format
nameVar = Andrew
print(&amp;quot;Hello, {}!&amp;quot;.format(nameVar))</description>
    </item>
    
    <item>
      <title>Floobits</title>
      <link>/post/floobits/</link>
      <pubDate>Fri, 11 Jan 2019 18:42:59 +1100</pubDate>
      
      <guid>/post/floobits/</guid>
      <description>Group work is always &amp;hellip; interesting.
For software development especially, there are so different many ways that you could write a procedure.
And for the exact same procedure, there so many different syntactical nuances that could differ too.
And that&amp;rsquo;s why style guides, and documentation is important!
That said, my COMP2521 Assignment 2 (Fury of Dracula) was a group (pair) assignment.
So, the obvious question is - who does what part, but more importantly; how do we edit together.</description>
    </item>
    
    <item>
      <title>Repl.it</title>
      <link>/post/repl.it/</link>
      <pubDate>Wed, 09 Jan 2019 14:12:31 +1100</pubDate>
      
      <guid>/post/repl.it/</guid>
      <description>Repl.it
Showing images
Jinja flask https://aryaboudaie.com/python/technical/educational/web/flask/2018/10/17/flask.html Note - for using templates on repl.it, you need to have at least two python files in your workspace because of a bug. The second Python file can be completely empty, but thatï¿½s why I have the dummy.py file in the REPL.</description>
    </item>
    
    <item>
      <title>SWEC Bulletin Generator</title>
      <link>/post/swec-bulletin-generator/</link>
      <pubDate>Thu, 20 Dec 2018 18:33:35 +1100</pubDate>
      
      <guid>/post/swec-bulletin-generator/</guid>
      <description>At the start of 2018 I wrote a Python script called swec-elvanto-automation.
It was a set of task runners that would manage the automatic generation of the service bulletin, as well as pretty roster emails
&amp;hellip; well, I&amp;rsquo;m officially marking it as abandonware! It worked flawlessly, but it wasn&amp;rsquo;t user friendly.
And also, with my other commitments taking more time, I don&amp;rsquo;t want my involvement and role at my church to become &amp;gt;&amp;gt;&amp;gt;&amp;gt;irreplaceable&amp;lt;&amp;lt;&amp;lt;&amp;lt;.</description>
    </item>
    
    <item>
      <title>Secret Agent</title>
      <link>/post/unsw-compclub2019summer/</link>
      <pubDate>Thu, 20 Dec 2018 18:32:47 +1100</pubDate>
      
      <guid>/post/unsw-compclub2019summer/</guid>
      <description>Quick Links
What is UNSW CSE CompClub?
On writing a CTF server
 I got the opportunity to take part in my uni computer society&amp;rsquo;s highschool program (again)!
Last time (Winter 2018) I volunteered as a mentor - those people who would help guide the students.
This time around I helped out as an organiser, in particular a content writer.
That means that I get a whole day to do whatever the heck I want!</description>
    </item>
    
    <item>
      <title>CompClub 2019 Summer CTF</title>
      <link>/post/unsw-compclub2019summer-ctf/</link>
      <pubDate>Thu, 20 Dec 2018 18:32:46 +1100</pubDate>
      
      <guid>/post/unsw-compclub2019summer-ctf/</guid>
      <description>Read the whole CompClub 2019 Summer Workshop post
 GitHub: featherbear/UNSW-CompClub2019Summer-CTF
Demo: featherbear.github.io/UNSW-CompClub2019Summer-CTF
During the Winter 2018 Workshop, the organiser for the security day coded up a CTF website.
 Technologies
Server: Flask (Python)
CSS: Bootstrap
Performance: RIP
 Yeah so, Flask is a great Python web framework, with all of its routing magic.
But running a server with Flask alone is not a good idea&amp;hellip;
Flask should be run in a WSGI environment, but the inbuilt Flask server is not such.</description>
    </item>
    
    <item>
      <title>UNSW COMP2521</title>
      <link>/post/unsw-comp2521/</link>
      <pubDate>Thu, 20 Dec 2018 18:21:10 +1100</pubDate>
      
      <guid>/post/unsw-comp2521/</guid>
      <description>location.href = &#34;//featherbear.github.io/UNSW-COMP2521/&#34; </description>
    </item>
    
    <item>
      <title>JavaScript Map</title>
      <link>/post/javascript-map/</link>
      <pubDate>Fri, 14 Dec 2018 17:20:18 +1100</pubDate>
      
      <guid>/post/javascript-map/</guid>
      <description>Don&amp;rsquo;t be lazy kids.
Don&amp;rsquo;t [].map(parseInt)
Do [].map(function(val) { parseInt(val) })
Also do [].map((val) =&amp;gt; parseInt(val))</description>
    </item>
    
    <item>
      <title>z-index</title>
      <link>/post/z-index/</link>
      <pubDate>Sun, 25 Nov 2018 20:46:10 +1100</pubDate>
      
      <guid>/post/z-index/</guid>
      <description>Soooo, you can&amp;rsquo;t interact with an element that has a negative z-index.
 &amp;lt;div&amp;gt;A&amp;lt;/div&amp;gt; --&amp;gt; z-index of 5 &amp;lt;div&amp;gt;B&amp;lt;/div&amp;gt; --&amp;gt; z-index of -1  Even if A has pointer-events: none; you won&amp;rsquo;t be able to touch B
&amp;lt;div&amp;gt;A&amp;lt;/div&amp;gt; --&amp;gt; z-index of 5 &amp;lt;div&amp;gt;B&amp;lt;/div&amp;gt; --&amp;gt; z-index of 0  Can touch B</description>
    </item>
    
    <item>
      <title>Python Tornado vs Flask</title>
      <link>/post/python-tornado-vs-flask/</link>
      <pubDate>Sat, 24 Nov 2018 01:27:03 +1100</pubDate>
      
      <guid>/post/python-tornado-vs-flask/</guid>
      <description>Python has two great web server libraries - Flask and Tornado.
Flask vs Tornado Why Flask Flask has a much easier to use routing functionality, where you just need a Python decorator @app.get(...).
In Tornado you need to set up a site router, and all these other things (or I didn&amp;rsquo;t do it right)
Why Tornado Tornado is a non-blocking server, which is able to handle multiple requests at the same time.</description>
    </item>
    
    <item>
      <title>HTML Script Tags</title>
      <link>/post/html-script-tags/</link>
      <pubDate>Sat, 24 Nov 2018 00:44:52 +1100</pubDate>
      
      <guid>/post/html-script-tags/</guid>
      <description>Source - growingwiththeweb.com
Summary &amp;lt;script&amp;gt; Block, load, run
&amp;lt;script async&amp;gt; Load, run
&amp;lt;script defer&amp;gt; Load, wait, run</description>
    </item>
    
    <item>
      <title>UNSW COMP1521</title>
      <link>/post/unsw-comp1521/</link>
      <pubDate>Mon, 05 Nov 2018 18:21:05 +1100</pubDate>
      
      <guid>/post/unsw-comp1521/</guid>
      <description>location.href = &#34;//featherbear.github.io/UNSW-COMP1521/&#34; </description>
    </item>
    
    <item>
      <title>Whoops There Goes My AI</title>
      <link>/post/whoops-there-goes-my-ai/</link>
      <pubDate>Mon, 22 Oct 2018 00:44:41 +1100</pubDate>
      
      <guid>/post/whoops-there-goes-my-ai/</guid>
      <description>GitHub: featherbear/Whoops-There-Goes-My-AI
 So there&amp;rsquo;s a game on the Google Play Store and Apple App Store called Whoops! There Goes My Orange.
You play as an orange falling from the sky, and you have to avoid the red bars. Simple, right?
Yep! But rage-inducing.
Anyway, so I decided to have a crack at writing some sort of AI for this game&amp;hellip;
It&amp;rsquo;d just be a collision avoidance algorithm&amp;hellip; not really an AI.</description>
    </item>
    
    <item>
      <title>ProPresenter 6 Stage Display Messages</title>
      <link>/post/propresenter6-stage-display-messages-client/</link>
      <pubDate>Sat, 04 Aug 2018 23:14:04 +1100</pubDate>
      
      <guid>/post/propresenter6-stage-display-messages-client/</guid>
      <description>ProPresenter 6 is great!
Except for the times when it&amp;rsquo;s not&amp;hellip; (then, it&amp;rsquo;s not great! [Wow who knew!])
PP6 allows you to send stage messages remotely from the ProPresenter 6 iOS / Android app.
Unfortunately that application is a bit clunky, and there&amp;rsquo;s no Windows / desktop app&amp;hellip;
 RICE Rally 2018 was coming up, and I needed some way to send Stage Display messages via my laptop.
If only there was a HTML/JavaScript solution&amp;hellip; that&amp;rsquo;d really come in handy&amp;hellip;</description>
    </item>
    
    <item>
      <title>School of Codecraft and Hackery</title>
      <link>/post/unsw-compclub2018winter/</link>
      <pubDate>Fri, 13 Jul 2018 18:52:17 +1100</pubDate>
      
      <guid>/post/unsw-compclub2018winter/</guid>
      <description>Workshop Website
Day One - Introduction to Python Day Two - Microbits Microbit by BBC is a small piece of hardware with all sorts of sensors and outputs.
The uni purchased 20 of these!
Unfortunately, the accelerometer module isn&amp;rsquo;t the best, and alot of the students couldn&amp;rsquo;t get one of the workshop instructions working.
The first activity was to build a firefly, using the wireless radios on the Microbit.</description>
    </item>
    
  </channel>
</rss>