<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Programming on Andrew&#39;s Blog</title><link>http://featherbear.github.io/blog/categories/programming/</link><description>Recent content in Programming on Andrew&#39;s Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 16 Sep 2019 09:00:10 +1100</lastBuildDate><atom:link href="http://featherbear.github.io/blog/categories/programming/index.xml" rel="self" type="application/rss+xml"/><item><title>Course-crashing UNSW COMP3331</title><link>http://featherbear.github.io/blog/post/unsw-comp3331/</link><pubDate>Mon, 16 Sep 2019 09:00:10 +1100</pubDate><guid>http://featherbear.github.io/blog/post/unsw-comp3331/</guid><description>Click here to go to the COMP3331 blog site</description></item><item><title>UNSW COMP2511</title><link>http://featherbear.github.io/blog/post/unsw-comp2511/</link><pubDate>Mon, 16 Sep 2019 09:00:10 +1100</pubDate><guid>http://featherbear.github.io/blog/post/unsw-comp2511/</guid><description>Click here to go to the COMP2511 blog site</description></item><item><title>Tabby Cat</title><link>http://featherbear.github.io/blog/post/tabby-cat/</link><pubDate>Mon, 24 Jun 2019 16:17:56 +1000</pubDate><guid>http://featherbear.github.io/blog/post/tabby-cat/</guid><description>My friend introduced me to the Tabby Cat cult club.
It&amp;rsquo;s a browser extension for Chrome and Firefox which shows you a cute animal as your new tab page.
Essentially, as you open more tabs , you unlock new toys (and characters *).
Snooping around the source code (Firefox) we can see this
function shouldPickNewGoody(visits) { if (visits === 1) { return true; } else if (visits % 200 === 0) { return true; } else { return Math.</description></item><item><title>Processing.js - Twinkle Tiles!</title><link>http://featherbear.github.io/blog/post/processing-twinkle/</link><pubDate>Mon, 29 Apr 2019 20:55:07 +1000</pubDate><guid>http://featherbear.github.io/blog/post/processing-twinkle/</guid><description>GitHub: https://github.com/featherbear/processing-twinkle
Played around abit with p5.js, a Javascript implementation of the Processing language.
iframe { width: 100vw; height: 100vh;
}</description></item><item><title>My Very Own Hugo Theme</title><link>http://featherbear.github.io/blog/post/my-very-own-hugo-theme/</link><pubDate>Fri, 26 Apr 2019 02:06:39 +1000</pubDate><guid>http://featherbear.github.io/blog/post/my-very-own-hugo-theme/</guid><description>I&amp;rsquo;ve been using the awesome Aether theme on this blog for about 4 months.
Whilst there was alot of desirable aspects, it sort of didn&amp;rsquo;t entirely work with my posts&amp;hellip; And I didn&amp;rsquo;t know how to customise Hugo&amp;hellip;
So the solution? Make your own theme!
I initially copied all the files from Aether into this theme, then just played around with each file
In the usual fashion, I used Bulma for my CSS framework.</description></item><item><title>Web Components</title><link>http://featherbear.github.io/blog/post/web-components/</link><pubDate>Thu, 25 Apr 2019 23:32:25 +1000</pubDate><guid>http://featherbear.github.io/blog/post/web-components/</guid><description>Scroll Nav / Scroll Spy
Page progress bar - ie the red loder bar on YouTube
Gradients
Breadcrumb
Parallax - Where the background of some content moves at a different rate than the foreground while scrolling</description></item><item><title>Gourmet Burgers</title><link>http://featherbear.github.io/blog/post/gourmet-burgers/</link><pubDate>Thu, 25 Apr 2019 09:07:16 +1100</pubDate><guid>http://featherbear.github.io/blog/post/gourmet-burgers/</guid><description>This semester I had a group assignment where we had to create an online ordering system for a ficticious company called GourmetBurgers.
Albeit it being a group assignment, and alot of waiting for my partners to finish their code; overall I found this assignment really fun to complete!
Especially to get a nice UI that would ultimately contribute towards 0% of my grade!
Check out the full post here: featherbear.</description></item><item><title>So You Want to Be a Python Expert? | PyData Seattle 2017</title><link>http://featherbear.github.io/blog/post/so-you-want-to-be-a-python-expert-pydata-seattle-2017/</link><pubDate>Wed, 24 Apr 2019 23:17:45 +1000</pubDate><guid>http://featherbear.github.io/blog/post/so-you-want-to-be-a-python-expert-pydata-seattle-2017/</guid><description>So I got bored and decided to watch this video These were the things covered in the presentation&amp;hellip;
Using data model methods Or (double-)underscore functions&amp;hellip;
The Python data model is a means by which we can implement protocols that have abstract meaning that is dependent on the object
For example, the methods:
__init__ __new__ __add__ __str__ __repr__ &amp;nbsp;
Aside
There also exists class methods, and static methods.</description></item><item><title>Arduino - WiFi DMX</title><link>http://featherbear.github.io/blog/post/arduino-wifi-dmx/</link><pubDate>Sat, 20 Apr 2019 21:58:58 +1000</pubDate><guid>http://featherbear.github.io/blog/post/arduino-wifi-dmx/</guid><description>At the start of 2018, I built a cheap wireless DMX receiver as a parting &amp;lsquo;gift&amp;rsquo; to my high school (Heck, I even wrote a training manual).
Their system had i s s u e s.
Two broken lighting consoles, and the DMX cable that connects from the control room was damaged due to water damage.
So something had to be done!
img { max-height: 50vh; } I threw together an ESP8266 NodeMCU V3, a MAX485 chip, and added a barrel type DC socket</description></item><item><title>Lampwin Moving Heads</title><link>http://featherbear.github.io/blog/post/lampwin-moving-heads/</link><pubDate>Sat, 20 Apr 2019 00:33:51 +1000</pubDate><guid>http://featherbear.github.io/blog/post/lampwin-moving-heads/</guid><description>/**TODO - Custom theme CSS for images and tables**/ table { width: 100%; border-collapse: collapse; } td { padding: 3px; border: 1px solid #A7A7A7; } td[align=center] { text-align: center; } Download the QLC+ fixture I made (12 Channel): Lampwin-Mini-LED-Spot-30W.qxf
I recently purchased two Chinese brand moving heads from eBay
I was not expecting to receive quality, but I did receive amusement and amazement as to how much enjoyment $70 could bring me.</description></item><item><title>PeerJS Revived</title><link>http://featherbear.github.io/blog/post/peerjs/</link><pubDate>Fri, 01 Mar 2019 11:34:37 +1100</pubDate><guid>http://featherbear.github.io/blog/post/peerjs/</guid><description>Near the end of 2017, I wrote attempted to write a delivery tracker webpage that would list all of my tracked packages and their status information.
To sync my list of packages between my devices, I used a library called PeerJS that established P2P connections between my devices to send and receive data. PeerJS was dormant since 2015, and amazingly it worked for the duration of my code.
After a 3 year period of inactivity, PeerJS is back and alive (in active commits) so yay!</description></item><item><title>Jebabej</title><link>http://featherbear.github.io/blog/post/jebabej/</link><pubDate>Thu, 28 Feb 2019 19:13:02 +1100</pubDate><guid>http://featherbear.github.io/blog/post/jebabej/</guid><description>Date: 28th February 2019
Time: Some time around 7pm&amp;hellip;
Location: UNSW CSE Level One Common Room
&amp;nbsp;
Person A: Let&amp;rsquo;s play Mafia!
Person B: We only have four players&amp;hellip;
Person A: That&amp;rsquo;s okay!
Person C: Sorry guys I gotta go now
Person A &amp;amp; B: Oh. &amp;nbsp;
&amp;hellip; &amp;nbsp;
Person D: Let&amp;rsquo;s make a Mafia app!
Introducing Jebabej!</description></item><item><title>UNSW COMP1531</title><link>http://featherbear.github.io/blog/post/unsw-comp1531/</link><pubDate>Mon, 18 Feb 2019 09:00:00 +1100</pubDate><guid>http://featherbear.github.io/blog/post/unsw-comp1531/</guid><description>Click here to go to the COMP1531 blog site</description></item><item><title>Balloon Shooting Challenge</title><link>http://featherbear.github.io/blog/post/smallbasic-balloon-shooting-game/</link><pubDate>Fri, 15 Feb 2019 16:27:36 +1100</pubDate><guid>http://featherbear.github.io/blog/post/smallbasic-balloon-shooting-game/</guid><description>My code can be found on GitHub: featherbear/smallbasic-balloon-shooting-game
A while ago I applied for a position at a company which taught children how to code&amp;hellip;
Today I got an email back with a programming challenge, let&amp;rsquo;s have a crack at it!
The Challenge (click to expand) In order to solve the challenge you will need to download and learn a new (and very simple) coding language, I hope you will enjoy the challenge.</description></item><item><title>Python 3.6 F-strings</title><link>http://featherbear.github.io/blog/post/python36-f-string/</link><pubDate>Wed, 13 Feb 2019 18:59:13 +1100</pubDate><guid>http://featherbear.github.io/blog/post/python36-f-string/</guid><description>PEP 498 introduced a new string formatting mechanism called Literal String Interpolation.
We&amp;rsquo;ll call them F-strings, because of the leading f character that appears before the string literals.
The PEP really says it all but sure we&amp;rsquo;ll go through it again, why not!
Format:
f &#39; &amp;lt;text&amp;gt; { &amp;lt;expression&amp;gt; &amp;lt;optional !s, !r, or !a&amp;gt; &amp;lt;optional : format specifier&amp;gt; } &amp;lt;text&amp;gt; ... &#39;
Using string format
nameVar = Andrew
print(&amp;quot;Hello, {}!&amp;quot;.format(nameVar))</description></item><item><title>Floobits</title><link>http://featherbear.github.io/blog/post/floobits/</link><pubDate>Fri, 11 Jan 2019 18:42:59 +1100</pubDate><guid>http://featherbear.github.io/blog/post/floobits/</guid><description>Group work is always &amp;hellip; interesting.
For software development especially, there are so different many ways that you could write a procedure.
And for the exact same procedure, there so many different syntactical nuances that could differ too.
And that&amp;rsquo;s why style guides, and documentation is important!
That said, my COMP2521 Assignment 2 (Fury of Dracula) was a group assignment.
So, the obvious question is - who does what part, but more importantly; how do we edit together.</description></item><item><title>Repl.it</title><link>http://featherbear.github.io/blog/post/repl.it/</link><pubDate>Wed, 09 Jan 2019 14:12:31 +1100</pubDate><guid>http://featherbear.github.io/blog/post/repl.it/</guid><description>Repl.it is an online code sandbox and IDE.
It supports many languages, and makes demoing and prototyping code a piece of cake.
It has some caveats though.
PyGame There&amp;rsquo;s no PyGame environment available on repl.it, making any PyGame project impossible.
Turtle The Turtle environment on repl.it is Python 2.7 - can&amp;rsquo;t teach Python 3.6 syntax here!
Showing Images For the UNSW CompClub 2019 Summer Workshop, the Security workshop introduced students to LSB steganography.</description></item><item><title>SWEC Bulletin Generator</title><link>http://featherbear.github.io/blog/post/swec-bulletin-generator/</link><pubDate>Thu, 20 Dec 2018 18:33:35 +1100</pubDate><guid>http://featherbear.github.io/blog/post/swec-bulletin-generator/</guid><description>At the start of 2018 I wrote a Python script called swec-elvanto-automation.
It was a set of task runners that would manage the automatic generation of the service bulletin, as well as pretty roster emails
&amp;hellip; well, I&amp;rsquo;m officially marking it as abandonware!
It worked flawlessly, but it wasn&amp;rsquo;t user friendly.
And also, with my other commitments taking more time, I don&amp;rsquo;t want my involvement and role at my church to become irreplaceable.</description></item><item><title>Secret Agent</title><link>http://featherbear.github.io/blog/post/unsw-compclub2019summer/</link><pubDate>Thu, 20 Dec 2018 18:32:47 +1100</pubDate><guid>http://featherbear.github.io/blog/post/unsw-compclub2019summer/</guid><description>Quick Links
What is UNSW CSE CompClub?
On writing a CTF server
I got the opportunity to take part in my uni computer society&amp;rsquo;s highschool program (again)!
Last time (Winter 2018) I volunteered as a mentor - those people who would help guide the students.
This time around I helped out as an organiser, in particular a content writer.
That means that I get a whole day to do whatever the heck I want!</description></item><item><title>CompClub 2019 Summer CTF</title><link>http://featherbear.github.io/blog/post/unsw-compclub2019summer-ctf/</link><pubDate>Thu, 20 Dec 2018 18:32:46 +1100</pubDate><guid>http://featherbear.github.io/blog/post/unsw-compclub2019summer-ctf/</guid><description>Read the whole CompClub 2019 Summer Workshop post
GitHub: featherbear/UNSW-CompClub2019Summer-CTF
Demo: featherbear.github.io/UNSW-CompClub2019Summer-CTF
During the Winter 2018 Workshop, the organiser for the security day coded up a CTF website.
Technologies
Server: Flask (Python)
CSS: Bootstrap
Performance: RIP
Yeah so, Flask is a great Python web framework, with all of its routing magic.
But running a server with Flask alone is not a good idea&amp;hellip;
Flask should be run in a WSGI environment, but the inbuilt Flask server is not such.</description></item><item><title>UNSW COMP2521</title><link>http://featherbear.github.io/blog/post/unsw-comp2521/</link><pubDate>Thu, 20 Dec 2018 18:21:10 +1100</pubDate><guid>http://featherbear.github.io/blog/post/unsw-comp2521/</guid><description>Click here to go to the COMP2521 blog site</description></item><item><title>JavaScript Map</title><link>http://featherbear.github.io/blog/post/javascript-map/</link><pubDate>Fri, 14 Dec 2018 17:20:18 +1100</pubDate><guid>http://featherbear.github.io/blog/post/javascript-map/</guid><description>Don&amp;rsquo;t be lazy kids.
Don&amp;rsquo;t [].map(parseInt)
Do [].map(function(val) { parseInt(val) })
Also do [].map(val =&amp;gt; parseInt(val))</description></item><item><title>z-index</title><link>http://featherbear.github.io/blog/post/z-index/</link><pubDate>Sun, 25 Nov 2018 20:46:10 +1100</pubDate><guid>http://featherbear.github.io/blog/post/z-index/</guid><description>Soooo, you can&amp;rsquo;t interact with an element that has a negative z-index.
&amp;lt;div&amp;gt;A&amp;lt;/div&amp;gt; --&amp;gt; z-index of 5 &amp;lt;div&amp;gt;B&amp;lt;/div&amp;gt; --&amp;gt; z-index of -1 Even if A has pointer-events: none; you won&amp;rsquo;t be able to touch B
&amp;lt;div&amp;gt;A&amp;lt;/div&amp;gt; --&amp;gt; z-index of 5 &amp;lt;div&amp;gt;B&amp;lt;/div&amp;gt; --&amp;gt; z-index of 0 Can touch B</description></item><item><title>Python Tornado vs Flask</title><link>http://featherbear.github.io/blog/post/python-tornado-vs-flask/</link><pubDate>Sat, 24 Nov 2018 01:27:03 +1100</pubDate><guid>http://featherbear.github.io/blog/post/python-tornado-vs-flask/</guid><description>Python has two great web server libraries - Flask and Tornado.
Flask vs Tornado Why Flask Flask has a much easier to use routing functionality, where you just need a Python decorator @app.get(...).
In Tornado you need to set up a site router, and all these other things (or I didn&amp;rsquo;t do it right)
Why Tornado Tornado is a non-blocking server, which is able to handle multiple requests at the same time.</description></item><item><title>HTML Script Tags</title><link>http://featherbear.github.io/blog/post/html-script-tags/</link><pubDate>Sat, 24 Nov 2018 00:44:52 +1100</pubDate><guid>http://featherbear.github.io/blog/post/html-script-tags/</guid><description>Source - growingwiththeweb.com
Summary &amp;lt;script&amp;gt; Block, load, run
&amp;lt;script async&amp;gt; Load, run
&amp;lt;script defer&amp;gt; Load, wait, run</description></item><item><title>UNSW COMP1521</title><link>http://featherbear.github.io/blog/post/unsw-comp1521/</link><pubDate>Mon, 05 Nov 2018 18:21:05 +1100</pubDate><guid>http://featherbear.github.io/blog/post/unsw-comp1521/</guid><description>Click here to go to the COMP1521 blog site</description></item><item><title>Whoops There Goes My AI</title><link>http://featherbear.github.io/blog/post/whoops-there-goes-my-ai/</link><pubDate>Mon, 22 Oct 2018 00:44:41 +1100</pubDate><guid>http://featherbear.github.io/blog/post/whoops-there-goes-my-ai/</guid><description>GitHub: featherbear/Whoops-There-Goes-My-AI
So there&amp;rsquo;s a game on the Google Play Store and Apple App Store called Whoops! There Goes My Orange.
You play as an orange falling from the sky, and you have to avoid the red bars. Simple, right?
Yep! But rage-inducing.
Anyway, so I decided to have a crack at writing some sort of AI for this game&amp;hellip;
It&amp;rsquo;d just be a collision avoidance algorithm&amp;hellip; not really an AI.</description></item><item><title>ProPresenter 6 Stage Display Messages</title><link>http://featherbear.github.io/blog/post/propresenter6-stage-display-messages-client/</link><pubDate>Sat, 04 Aug 2018 23:14:04 +1100</pubDate><guid>http://featherbear.github.io/blog/post/propresenter6-stage-display-messages-client/</guid><description>ProPresenter 6 is great!
Except for the times when it&amp;rsquo;s not&amp;hellip; (then, it&amp;rsquo;s not great! [Wow who knew!])
PP6 allows you to send stage messages remotely from the ProPresenter 6 iOS / Android app.
Unfortunately that application is a bit clunky, and there&amp;rsquo;s no Windows / desktop app&amp;hellip;
RICE Rally 2018 was coming up, and I needed some way to send Stage Display messages via my laptop.
If only there was a HTML/JavaScript solution&amp;hellip; that&amp;rsquo;d really come in handy&amp;hellip;</description></item><item><title>School of Codecraft and Hackery</title><link>http://featherbear.github.io/blog/post/unsw-compclub2018winter/</link><pubDate>Fri, 13 Jul 2018 18:52:17 +1100</pubDate><guid>http://featherbear.github.io/blog/post/unsw-compclub2018winter/</guid><description>Workshop Website
Day One - Introduction to Python Day Two - Microbits Microbit by BBC is a small piece of hardware with all sorts of sensors and outputs.
The uni purchased 20 of these!
Unfortunately, the accelerometer module isn&amp;rsquo;t the best, and alot of the students couldn&amp;rsquo;t get one of the workshop instructions working.
The first activity was to build a firefly, using the wireless radios on the Microbit.</description></item></channel></rss>